name: CI
on:
  pull_request:
    branches:
      - main

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  conventional-commits:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v4

  # Install and cache npm dependencies
  install-cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: ${{ runner.os }}-yarn-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-v1
      - name: Install dependencies if cache invalid
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn

  prettier:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - uses: actions/checkout@v2
      - name: Restore yarn dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: ${{ runner.os }}-yarn-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-v1
      - run: yarn format:c

  eslint:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - uses: actions/checkout@v2
      - name: Restore yarn dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: ${{ runner.os }}-yarn-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-v1
      - run: yarn lint

  chromatic:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Restore yarn dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: ${{ runner.os }}-yarn-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-v1
      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Publish to Chromatic
        uses: chromaui/action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets.CHROMATIC_TOKEN }}
          buildScriptName: build:storybook
          exitOnceUploaded: true

  build:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - uses: actions/checkout@v2
      - name: Restore yarn dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: ${{ runner.os }}-yarn-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-v1
      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: yarn build
        env:
          MONGODB_URI: ${{ secrets.CYPRESS_MONGODB_URI }}
      - name: Save build folder
        uses: actions/upload-artifact@v2
        with:
          name: build
          if-no-files-found: error
          path: .next

  cypress-integration:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container: cypress/browsers:node14.17.0-chrome88-ff89
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download the build folders
        uses: actions/download-artifact@v2
        with:
          name: build
          path: .next

      - name: 'UI Tests - Chrome'
        uses: cypress-io/github-action@v2
        with:
          start: yarn start:ci
          wait-on: 'http://localhost:4243'
          wait-on-timeout: 60
          browser: chrome
          record: true
          parallel: false
          group: 'UI - Chrome'
          project: ./tests/integration
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          MONGODB_URI: ${{ secrets.CYPRESS_MONGODB_URI }}
          SECRET: ${{ secrets.CYPRESS_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          TZ: Europe/Paris
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cypress-unit:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container: cypress/browsers:node14.17.0-chrome88-ff89
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download the build folders
        uses: actions/download-artifact@v2
        with:
          name: build
          path: .next

      - name: 'UI Tests - Chrome'
        uses: cypress-io/github-action@v2
        with:
          start: yarn start:ci
          browser: chrome
          record: true
          parallel: true
          project: ./tests/unit
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          MONGODB_URI: ${{ secrets.CYPRESS_MONGODB_URI }}
          SECRET: ${{ secrets.CYPRESS_SECRET }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
